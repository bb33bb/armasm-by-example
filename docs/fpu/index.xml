<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Appendix A: VFP Coprocessor on ARM Assembly By Example</title><link>https://armasm.com/docs/fpu/</link><description>Recent content in Appendix A: VFP Coprocessor on ARM Assembly By Example</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://armasm.com/docs/fpu/index.xml" rel="self" type="application/rss+xml"/><item><title>FPU Overview</title><link>https://armasm.com/docs/fpu/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://armasm.com/docs/fpu/overview/</guid><description>FPU Overview # In addition to the core processor, there can exist an optional co-processor that works with floating point numbers. Since the release, this co-processor has become almost synonymous to the NEON co-processor which you will learn about in the next appendix.
Mnemonics # Many of the instructions you used with the core processor exist in the FPU, but they are prefixed with a &amp;lsquo;V&amp;rsquo;. A full list is here.</description></item><item><title>Program 20: Here to There</title><link>https://armasm.com/docs/fpu/here-to-there/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://armasm.com/docs/fpu/here-to-there/</guid><description>Floating point numbers # How does a floating point number actually work? IEEE 754 is the tech sheet that talks about floating point numbers. For single precision, it says that the layout is:
Sign (+/-) Exponent Fraction bit 31 bits 23-30 bit 0-22 For double precision it is:
Sign (+/-) Exponent Fraction bit 63 bits 52-62 bit 0-51 The sign bit is the easy part.</description></item></channel></rss>