<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ARM Assembly By Example</title><link>/docs/getting-to-hello-world/</link><description>Recent content on ARM Assembly By Example</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/docs/getting-to-hello-world/index.xml" rel="self" type="application/rss+xml"/><item><title>The Basics</title><link>/docs/getting-to-hello-world/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/getting-to-hello-world/basics/</guid><description>The Basics # Dependency Check # The first thing that we need to do is check to make sure that we have all of the correct tools that we need. The below table will tell you the program name, the command to check to make sure that it is installed, and what package includes the tool if it isn&amp;rsquo;t present.
Program Name Check Command Required Package GNU Assembler as --version binutils GNU Linker ld --version binutils GNU Debugger gdb --version gdb Make make --version make Syntax # The first part of writing programs is understanding the syntax of the language.</description></item><item><title>Program 1: Exiting</title><link>/docs/getting-to-hello-world/exiting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/getting-to-hello-world/exiting/</guid><description>While you may wonder why you need to talk about how to exit a program, know that you do. Unlike many higher languages, assembly programs don&amp;rsquo;t gracefully exit when you stop writing code. What happens if you don&amp;rsquo;t exit the program is the the computer will keep reading data in memory past the last opcode. Because you are running in a *nix environment, you will get a segmentation fault as it will drift into memory you don&amp;rsquo;t have access to.</description></item><item><title>Program 2: Hello World</title><link>/docs/getting-to-hello-world/hello-world/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/getting-to-hello-world/hello-world/</guid><description>From the exiting program, you can add a couple more lines before it to actually output the &amp;ldquo;Hello World!&amp;rdquo;
Labels # You have already used the _start: label but what does that actually do? A label simply names a place in the program that you can reference to later. In the data section, it&amp;rsquo;s common to label the beginning part of a piece of data. When this happens, that label and all references to it, will become the same address that points to a place in the data loaded into memory.</description></item></channel></rss>